/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compsci_ia;

import java.util.ArrayList;
import javax.swing.*;

/**
 *
 * @author 42087
 */
public class theInterface extends javax.swing.JFrame {

    static ParkingLot pl = new ParkingLot();
    int bogorIndex = -1, bandaIndex = -1, mampangIndex = -1, gadingIndex = -1;
    int bogorIndex2 = -1, bandaIndex2 = -1, mampangIndex2 = -1, gadingIndex2 = -1;
    int tempRow, tempCol;
    public Object selected;
    public boolean selectedFromFirstTable;
    public String tempDelDest, tempDelFn, tempDelLn;
    
    public ArrayList<String> bogor1, bogor2, banda1, banda2, mampang1, mampang2, gading1, gading2;

    public theInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fnfield = new javax.swing.JTextField();
        lnfield = new javax.swing.JTextField();
        idfield = new javax.swing.JTextField();
        registerButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        earlyLate = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lateLate = new javax.swing.JTable();
        resultLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");

        jLabel3.setText("Student ID Number");

        fnfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fnfieldActionPerformed(evt);
            }
        });

        lnfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lnfieldActionPerformed(evt);
            }
        });

        idfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idfieldActionPerformed(evt);
            }
        });

        registerButton.setText("Register");
        registerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        earlyLate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bogor Bus 1", "Banda Bus 1", "Mampang Bus 1", "Gading Bus 1"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        earlyLate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                earlyLateMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(earlyLate);

        jLabel4.setText("4:45 Buses (late buses schedule 1)");

        lateLate.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bogor Bus 2", "Banda Bus 2", "Mampang Bus 2", "Gading Bus 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        lateLate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lateLateMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lateLate);

        resultLabel.setText("Result");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lnfield, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(105, 105, 105)
                        .addComponent(fnfield, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(registerButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(resultLabel))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(jLabel4)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(fnfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(lnfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(idfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(registerButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(resultLabel)
                .addGap(103, 103, 103))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fnfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fnfieldActionPerformed

    }//GEN-LAST:event_fnfieldActionPerformed

    private void lnfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lnfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lnfieldActionPerformed

    private void idfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idfieldActionPerformed

    private void registerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerButtonActionPerformed

        String fn = fnfield.getText(), ln = lnfield.getText();
        int id = Integer.parseInt(idfield.getText());
        fnfield.setText("");
        lnfield.setText("");
        idfield.setText("");
        System.out.println("Searching .. " + fn + " " + ln + " with ID " + id);
        if (pl.getUserInfo(fn, ln, id) == true) {
            for (Box b : pl.boxes) {
                if (b.getDest().equalsIgnoreCase(ParkingLot.address)) {
                    resultLabel.setText("Destination Set to " + b.getDest());
                    if (b.isStudentInBox(new Student(fn, ln, Integer.toString(id), b.getDest())) == true) {
                        JOptionPane.showMessageDialog(null, "You are already registered to take the late bus. Have a nice day!");
                        break;
                    } else {
                        b.assignStudent(new Student(fn, ln, Integer.toString(id), b.getDest()));
                        try {
                            if (b.getDest().equalsIgnoreCase("bogor")) {
                                if (bogorIndex < 4) {
                                    bogor1.add(fn + " " + ln);
                                    earlyLate.getModel().setValueAt(bogor1.get(bogorIndex), bogorIndex, 0);
                                    bogorIndex++;
                                    break;
//                                    for (int bg = 0; bg < 4; bg++) {
//                                        if (earlyLate.getModel().getValueAt(bg, 0) == null) {
//                                            earlyLate.getModel().setValueAt(fn + " " + ln, bg, 0);
//                                            break;
//                                        }
//                                    }

                                } else if (bogorIndex2 < 4) {
                                    if (confirmation() == true) {
                                        bogorIndex2++;
                                        lateLate.getModel().setValueAt(fn + " " + ln, bogorIndex2, 0);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "All buses to your destination are full.");
                                }
                            } else if (b.getDest().equalsIgnoreCase("banda")) {
                                if (bandaIndex < 4) {
                                    bandaIndex++;
                                    earlyLate.getModel().setValueAt(fn + " " + ln, bandaIndex, 1);
                                } else if (bandaIndex2 < 4) {
                                    if (confirmation() == true) {
                                        bandaIndex2++;
                                        lateLate.getModel().setValueAt(fn + " " + ln, bandaIndex2, 1);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "All buses to your destination are full.");
                                }
                            } else if (b.getDest().equalsIgnoreCase("mampang")) {
                                if (mampangIndex < 4) {
                                    mampangIndex++;
                                    earlyLate.getModel().setValueAt(fn + " " + ln, mampangIndex, 2);
                                } else if (mampangIndex2 < 4) {
                                    if (confirmation() == true) {
                                        mampangIndex2++;
                                        lateLate.getModel().setValueAt(fn + " " + ln, mampangIndex2, 2);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "All buses to your destination are full.");
                                }
                            } else {
                                if (gadingIndex < 4) {
                                    gadingIndex++;
                                    earlyLate.getModel().setValueAt(fn + " " + ln, gadingIndex, 3);
                                } else if (gadingIndex2 < 4) {
                                    if (confirmation() == true) {
                                        gadingIndex2++;
                                        lateLate.getModel().setValueAt(fn + " " + ln, gadingIndex2, 3);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "All buses to your destination are full.");
                                }
                            }

                        } catch (Exception e) {
                            System.out.println("Caught Error: " + e.getMessage());
                        }
                    }
                }
            }

        }

    }//GEN-LAST:event_registerButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        try {
            if (selected != null) {
                String var;
                String ans = JOptionPane.showInputDialog(null, "Delete " + selected + "? (yes/no)");
                if (selectedFromFirstTable) {
                    if (ans.equalsIgnoreCase("yes")) {
                        var = earlyLate.getModel().getValueAt(tempRow, tempCol).toString();
                        earlyLate.getModel().setValueAt(null, tempRow, tempCol);
                        JOptionPane.showMessageDialog(null, "Delete Success");
                        if (pl.getUserInfo2(var) == true) {
                            for (Box b : pl.boxes) {
                                for (Student std : b.studentList) {
                                    if (std != null) {
                                        if (std.printStudent().equals(var)) {
                                            String d = std.distr;
                                            if (d.equalsIgnoreCase("bogor")) {
                                                bogorIndex--;
                                            } else if (d.equalsIgnoreCase("banda")) {
                                                bandaIndex--;
                                            } else if (d.equalsIgnoreCase("mampang")) {
                                                mampangIndex--;
                                            } else {
                                                gadingIndex--;
                                            }
                                            b.unassignStudent(std);
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Delete Cancelled");
                    }
                } else {
                    if (ans.equalsIgnoreCase("yes")) {
                        var = lateLate.getModel().getValueAt(tempRow, tempCol).toString();
                        lateLate.getModel().setValueAt(null, tempRow, tempCol);
                        JOptionPane.showMessageDialog(null, "Delete Success");
                        if (pl.getUserInfo2(var) == true) {
                            for (Box b : pl.boxes) {
                                for (Student std : b.studentList) {
                                    if (std != null) {
                                        if (std.printStudent().equals(var)) {
                                            String d = std.distr;
                                            if (d.equalsIgnoreCase("bogor")) {
                                                bogorIndex2--;
                                            } else if (d.equalsIgnoreCase("banda")) {
                                                bandaIndex2--;
                                            } else if (d.equalsIgnoreCase("mampang")) {
                                                mampangIndex2--;
                                            } else {
                                                gadingIndex2--;
                                            }
                                            b.unassignStudent(std);
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Delete Cancelled");
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Please select a value from the table first");
            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_deleteButtonActionPerformed

    private void earlyLateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_earlyLateMouseClicked
        tempRow = earlyLate.rowAtPoint(evt.getPoint());
        tempCol = earlyLate.columnAtPoint(evt.getPoint());
        try {
            JOptionPane.showMessageDialog(null, "Selected: " + earlyLate.getValueAt(tempRow, tempCol).toString());
            for (int i = 0; i < earlyLate.getModel().getValueAt(tempRow, tempCol).toString().length() - 1; i++) {
                if (earlyLate.getModel().getValueAt(tempRow, tempCol).toString().substring(i, i++).equals(" ")) {
                    String name = earlyLate.getModel().getValueAt(tempRow, tempCol).toString().substring(0, i++);
                    resultLabel.setText(name);
                    break;
                }
            }
            selected = earlyLate.getValueAt(tempRow, tempCol);
            selectedFromFirstTable = true;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: Empty Cell Selected");
        }

    }//GEN-LAST:event_earlyLateMouseClicked

    private void lateLateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lateLateMouseClicked
        tempRow = lateLate.rowAtPoint(evt.getPoint());
        tempCol = lateLate.columnAtPoint(evt.getPoint());
        try {
            JOptionPane.showMessageDialog(null, "Selected: " + lateLate.getValueAt(tempRow, tempCol).toString());
            selected = lateLate.getValueAt(tempRow, tempCol);
            selectedFromFirstTable = false;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error: Empty Cell Selected");
        }

    }//GEN-LAST:event_lateLateMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(theInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(theInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(theInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(theInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new theInterface().setVisible(true);
            }
        });
    }

    public static boolean confirmation() {
        String message = JOptionPane.showInputDialog(null, "Bus full. Get transferred to next bus? (yes/no)");
        if (message.equalsIgnoreCase("yes")) {
            return true;
        } else {
            return false;
        }

    }
    
    public static void organizeTable() {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JTable earlyLate;
    private javax.swing.JTextField fnfield;
    private javax.swing.JTextField idfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable lateLate;
    private javax.swing.JTextField lnfield;
    private javax.swing.JButton registerButton;
    private javax.swing.JLabel resultLabel;
    // End of variables declaration//GEN-END:variables

    private void organizeTable(JTable table) {
        for (int a = 0; a < table.getModel().getColumnCount(); a++) {
            if (table.getModel().getValueAt(0, a) == null) {

            }
        }
    }
}
